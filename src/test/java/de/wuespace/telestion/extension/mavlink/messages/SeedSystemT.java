package de.wuespace.telestion.extension.mavlink.messages;

import com.fasterxml.jackson.annotation.JsonProperty;
import de.wuespace.telestion.extension.mavlink.annotation.MavArray;
import de.wuespace.telestion.extension.mavlink.annotation.MavField;
import de.wuespace.telestion.extension.mavlink.annotation.MavInfo;
import de.wuespace.telestion.extension.mavlink.NativeType;
import de.wuespace.telestion.extension.mavlink.message.MavlinkMessage;

/**
 *  Contains the whole Seeds system_t information + local time + state.<br>
 * <br>
 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
 *
 * @author Autogenerated by XML2Record-Tool (by Cedric Boes)
 * @version 1.0 (autogenerated)
 */
@MavInfo(id = 10003, crc = 252)
@SuppressWarnings("preview")
public record SeedSystemT(
		/**
		 * Seed local time<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.INT_64)
		@JsonProperty long timeLocal,
		/**
		 *  acceleration along x-axis, multiple of g<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuAccX,
		/**
		 *  acceleration along y-axis, multiple of g<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuAccY,
		/**
		 *  acceleration along z-axis, multiple of g<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuAccZ,
		/**
		 * angular velocity around x-axis <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuGyroX,
		/**
		 * angular velocity around y-axis <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuGyroY,
		/**
		 * angular velocity around z-axis <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float imuGyroZ,
		/**
		 * air pressure <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float baroPress,
		/**
		 * temperature in degrees Celsius <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float baroTemp,
		/**
		 * air pressure <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float vacuumBaroPress,
		/**
		 * rotation rate of the rotor in rad/s <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float tachoRotRate,
		/**
		 * current latitude (N is positiv, S is negativ) <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float gpsLat,
		/**
		 * current longitude (W is positiv, E is negativ) <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float gpsLong,
		/**
		 * horizontal dilution of precision <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float gpsHdop,
		/**
		 * altitude above mean sea level <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float gpsAlt,
		/**
		 * vertical velocity of the seed in m/s ï¿½ negative if seed is falling<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float filterVelVertical,
		/**
		 * height above ground in m<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float filterHeightGround,
		/**
		 * absolute (to air/world frame) rotation rate of the rotor in rad/s" <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float filterRotorRotRate,
		/**
		 * absolute (to air/world frame) rotation rate of the body in rad/s"<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float fiterBodyRotRate,
		/**
		 * induced vertical velocity (lift)  in m/s<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float filterVelVerticalInd,
		/**
		 * setpoint for the pitch angle for the servos <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float controllerBladePitch,
		/**
		 * desired fin angle <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.FLOAT)
		@JsonProperty float controllerFinAngle,
		/**
		 * current System state<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int stateCur,
		/**
		 * contains swashplate_servo1_amps, swashplate_servo2_amps, swashplate_servo3_amps and fin_servo_amps in this order with actual data size units of 12 bits. <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */

		@MavArray(length = 6)
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int[] servoAmps,
		/**
		 * contains lidar_servo_on and lidar_servo_open with individual data size units of 1 bit.<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.INT_8)
		@JsonProperty int lidarServo,
		/**
		 * bat_temp(temperature) and bat_heating_amps(current flowing) in this order with individual data size units of 12 bits<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */

		@MavArray(length = 3)
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int[] batInfo,
		/**
		 * rxsm_volts (RXSM voltage), bat1_volts (Battery block 1 voltage), bat2_volts (Battery block 2 voltage), rail3v3_volts (3V3 Rail voltage) in this order with actual data size units of 12 bits. <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */

		@MavArray(length = 6)
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int[] systemVoltageInfo,
		/**
		 * rxsm_allowed, bat1_allowed and bat2_allowed in this order with individual size of 1 bit.<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int systemConfig,
		/**
		 * indicator for gps fix <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int gpsQuality,
		/**
		 * number of used satellites <br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int gpsSatsused,
		/**
		 * indentifier for controller type/state<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int controllerId,
		/**
		 * imu_acc_avail, imu_gyro_avail, baro_avail, vacuum_baro_avail, tacho_rot_avail, servo_amps_avail, bat_temp_avail, volts_avail in this order with individual size of 1 bit<br>
		 * <br>
		 * <i>Autogenerated by XML2Record-Tool v1.3.11</i>
		 */
		@MavField(nativeType = NativeType.UINT_8)
		@JsonProperty int availableStatus) implements MavlinkMessage {
	/**
	 * There shall be no default-constructor for normal developers.
	 */
	@SuppressWarnings("unused")
	private SeedSystemT() {
		this(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, 0, null, null, 0, 0, 0, 0, 0);
	}
}
